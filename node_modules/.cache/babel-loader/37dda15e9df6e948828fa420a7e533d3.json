{"ast":null,"code":"var _jsxFileName = \"/Users/zandrodiocampo/Desktop/newApp/chat_app/src/pages/login/Login.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from 'react';\nimport { Form, Button, Card } from 'react-bootstrap';\nimport UserContext from '/../UserContext';\nimport Swal from 'sweetalert2';\nimport { Navigate, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n\n  const {\n    user,\n    setUser\n  } = useContext(UserContext);\n  console.log(user); // State hooks to store the values of the input fields\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState(''); // State to determine whether submit button is enabled or not\n\n  const [isActive, setIsActive] = useState(false);\n\n  function authenticate(e) {\n    // Prevents page redirection via form submission\n    e.preventDefault();\n    fetch('https://guarded-woodland-31326.herokuapp.com/users/signin', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: email,\n        password: password\n      })\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n\n      if (typeof data.accessToken !== \"undefined\") {\n        localStorage.setItem('token', data.accessToken);\n        retrieveUserDetails(data.accessToken);\n        Swal.fire({\n          title: \"Login Successful\",\n          text: \"Happy Shopping!\"\n        });\n      } else {\n        Swal.fire({\n          title: \"Authentication Failed\",\n          text: \"Check your credentials\"\n        });\n      }\n    });\n    setEmail('');\n    setPassword('');\n  }\n\n  ;\n\n  const retrieveUserDetails = token => {\n    fetch('https://guarded-woodland-31326.herokuapp.com/users/details/:userId', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n      setUser({\n        id: data._id,\n        isAdmin: data.isAdmin\n      });\n    });\n  };\n\n  useEffect(() => {\n    // Validation to enable submit button when all fields are populated and both passwords match\n    if (email !== '' && password !== '') {\n      setIsActive(true);\n    } else {\n      setIsActive(false);\n    }\n  }, [email, password]);\n  return user.id !== null ? /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/courses\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login Here:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"p-3\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: e => authenticate(e),\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"userEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Enter email\",\n            required: true,\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Enter password\",\n            required: true,\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Not yet registered? \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/register\",\n            children: \"Register here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), isActive ? /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"success\",\n          type: \"submit\",\n          id: \"submitBtn\",\n          className: \"mt-3 mb-5\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          type: \"submit\",\n          id: \"submitBtn\",\n          disabled: true,\n          className: \"mt-3 mb-5\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Login, \"Yc44q4SYVOhA+6a2CUsfhEZLu90=\");\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","useEffect","useContext","Form","Button","Card","UserContext","Swal","Navigate","Link","Login","user","setUser","console","log","email","setEmail","password","setPassword","isActive","setIsActive","authenticate","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","res","json","data","accessToken","localStorage","setItem","retrieveUserDetails","fire","title","text","token","Authorization","id","_id","isAdmin","target","value"],"sources":["/Users/zandrodiocampo/Desktop/newApp/chat_app/src/pages/login/Login.js"],"sourcesContent":["import {useState, useEffect, useContext} from 'react';\nimport { Form, Button, Card} from 'react-bootstrap';\nimport UserContext from '/../UserContext';\nimport Swal from 'sweetalert2';\nimport {Navigate, Link} from 'react-router-dom';\n\nexport default function Login() {\n\n    const {user, setUser} = useContext(UserContext);\n    console.log(user);\n\n\t// State hooks to store the values of the input fields\n\tconst [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    // State to determine whether submit button is enabled or not\n    const [isActive, setIsActive] = useState(false);\n\n      \tfunction authenticate(e) {\n\n\t        // Prevents page redirection via form submission\n\t        e.preventDefault();\n\n            fetch('https://guarded-woodland-31326.herokuapp.com/users/signin', {\n                method: 'POST', \n                headers: {\n                        'Content-type' : 'application/json'\n                    },\n                body: JSON.stringify({\n                    email: email,\n                    password: password\n                })\n            })\n            .then(res => res.json())\n            .then(data => {\n                console.log(data);\n\n                if(typeof data.accessToken !== \"undefined\"){\n                    localStorage.setItem('token', data.accessToken)\n                    retrieveUserDetails(data.accessToken);\n\n                    Swal.fire({\n                        title: \"Login Successful\",\n                        text: \"Happy Shopping!\"\n                    });\n                } else {\n                    Swal.fire({\n                        title: \"Authentication Failed\",\n                        text: \"Check your credentials\"\n                    });\n                }\n            });\n\n\t        setEmail('');\n\t        setPassword('');\n\n\t    };\n\n        const retrieveUserDetails = (token) => {\n\n            fetch('https://guarded-woodland-31326.herokuapp.com/users/details/:userId', {\n                headers: {\n                    Authorization: `Bearer ${token}`\n                }\n            })\n            .then(res => res.json())\n            .then(data => {\n                console.log(data);\n\n                setUser({\n                    id: data._id,\n                    isAdmin: data.isAdmin\n                });\n            })\n        }\n\n    useEffect(() => {\n\t    // Validation to enable submit button when all fields are populated and both passwords match\n\t    if(email !== '' && password !== ''){\n\t        setIsActive(true);\n\t    }else{\n\t        setIsActive(false);\n\t    }\n\n\t}, [email, password]);\n\n    return (\n        (user.id !==null) ?\n            <Navigate to=\"/courses\"/>\n        :\n\n    \t<>\n    \t<h1>Login Here:</h1>\n        <Card className=\"p-3\">\n        <Form onSubmit={e => authenticate(e)}>\n            <Form.Group controlId=\"userEmail\">\n                <Form.Label>Email address</Form.Label>\n                <Form.Control \n                    type=\"email\" \n                    placeholder=\"Enter email\" \n                    required\n                    value={email}\n\t          \t\tonChange={(e) => setEmail(e.target.value)}\n\n                />\n            </Form.Group>\n\n            <Form.Group controlId=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control \n                    type=\"password\" \n                    placeholder=\"Enter password\" \n                    required\n             \t\tvalue={password}\n\t          \t\tonChange={(e) => setPassword(e.target.value)}\n                />\n            </Form.Group>\n\n            <p>Not yet registered? <Link to=\"/register\">Register here</Link></p>\n\n            { isActive ? \n                <Button variant=\"success\" type=\"submit\" id=\"submitBtn\" className=\"mt-3 mb-5\">\n                    Login\n                </Button>\n                : \n                <Button variant=\"danger\" type=\"submit\" id=\"submitBtn\" disabled className=\"mt-3 mb-5\">\n                    Login\n                </Button>\n            }\n\n        </Form>\n        </Card>\n        </>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}